{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":7,"column":24}},{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":11,"column":40}},{"name":"babel-runtime/core-js/object/get-prototype-of","loc":{"line":15,"column":30}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":19,"column":31}},{"name":"babel-runtime/helpers/createClass","loc":{"line":23,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":27,"column":42}},{"name":"babel-runtime/helpers/inherits","loc":{"line":31,"column":25}},{"name":"react","loc":{"line":37,"column":21}},{"name":"prop-types","loc":{"line":41,"column":25}},{"name":"react-dom","loc":{"line":45,"column":24}},{"name":"react-event-listener","loc":{"line":47,"column":34}},{"name":"lodash/debounce","loc":{"line":51,"column":24}},{"name":"react-transition-group/Transition","loc":{"line":55,"column":26}},{"name":"../styles/withTheme","loc":{"line":59,"column":25}},{"name":"../styles/transitions","loc":{"line":63,"column":27}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nexports.setTranslateValue = setTranslateValue;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _reactEventListener = require('react-event-listener');\n\nvar _reactEventListener2 = _interopRequireDefault(_reactEventListener);\n\nvar _debounce = require('lodash/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _Transition = require('react-transition-group/Transition');\n\nvar _Transition2 = _interopRequireDefault(_Transition);\n\nvar _withTheme = require('../styles/withTheme');\n\nvar _withTheme2 = _interopRequireDefault(_withTheme);\n\nvar _transitions = require('../styles/transitions');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n// @inheritedComponent Transition\n\nvar GUTTER = 24;\n\n// Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `translate3d(0, 0, 0)`.`\nfunction getTranslateValue(props, node) {\n  var direction = props.direction;\n\n  var rect = node.getBoundingClientRect();\n\n  var transform = void 0;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    var computedStyle = window.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    var transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return 'translateX(100vw) translateX(-' + (rect.left - offsetX) + 'px)';\n  } else if (direction === 'right') {\n    return 'translateX(-' + (rect.left + rect.width + GUTTER - offsetX) + 'px)';\n  } else if (direction === 'up') {\n    return 'translateY(100vh) translateY(-' + (rect.top - offsetY) + 'px)';\n  }\n\n  // direction === 'down\n  return 'translate3d(0, ' + (0 - (rect.top + rect.height)) + 'px, 0)';\n}\n\nfunction setTranslateValue(props, node) {\n  var transform = getTranslateValue(props, node);\n\n  if (transform) {\n    node.style.transform = transform;\n    node.style.webkitTransform = transform;\n  }\n}\n\nvar reflow = function reflow(node) {\n  return node.scrollTop;\n};\n\nvar Slide = function (_React$Component) {\n  (0, _inherits3.default)(Slide, _React$Component);\n\n  function Slide() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Slide);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Slide.__proto__ || (0, _getPrototypeOf2.default)(Slide)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      // We use this state to handle the server-side rendering.\n      firstMount: true\n    }, _this.transition = null, _this.handleResize = (0, _debounce2.default)(function () {\n      // Skip configuration where the position is screen size invariant.\n      if (_this.props.in || _this.props.direction === 'down' || _this.props.direction === 'right') {\n        return;\n      }\n\n      var node = (0, _reactDom.findDOMNode)(_this.transition);\n      if (node instanceof HTMLElement) {\n        setTranslateValue(_this.props, node);\n      }\n    }, 166), _this.handleEnter = function (node) {\n      setTranslateValue(_this.props, node);\n      reflow(node);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node);\n      }\n    }, _this.handleEntering = function (node) {\n      var _this$props = _this.props,\n          theme = _this$props.theme,\n          timeout = _this$props.timeout;\n\n      node.style.transition = theme.transitions.create('transform', {\n        duration: typeof timeout === 'number' ? timeout : timeout.enter,\n        easing: theme.transitions.easing.easeOut\n      });\n      node.style.webkitTransition = theme.transitions.create('-webkit-transform', {\n        duration: typeof timeout === 'number' ? timeout : timeout.enter,\n        easing: theme.transitions.easing.easeOut\n      });\n      node.style.transform = 'translate3d(0, 0, 0)';\n      node.style.webkitTransform = 'translate3d(0, 0, 0)';\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node);\n      }\n    }, _this.handleExit = function (node) {\n      var _this$props2 = _this.props,\n          theme = _this$props2.theme,\n          timeout = _this$props2.timeout;\n\n      node.style.transition = theme.transitions.create('transform', {\n        duration: typeof timeout === 'number' ? timeout : timeout.exit,\n        easing: theme.transitions.easing.sharp\n      });\n      node.style.webkitTransition = theme.transitions.create('-webkit-transform', {\n        duration: typeof timeout === 'number' ? timeout : timeout.exit,\n        easing: theme.transitions.easing.sharp\n      });\n      setTranslateValue(_this.props, node);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    }, _this.handleExited = function (node) {\n      // No need for transitions when the component is hidden\n      node.style.transition = '';\n      node.style.webkitTransition = '';\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Slide, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // state.firstMount handle SSR, once the component is mounted, we need\n      // to properly hide it.\n      if (!this.props.in) {\n        // We need to set initial translate values of transition element\n        // otherwise component will be shown when in=false.\n        this.updatePosition();\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps() {\n      this.setState({\n        firstMount: false\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.direction !== this.props.direction && !this.props.in) {\n        // We need to update the position of the drawer when the direction change and\n        // when it's hidden.\n        this.updatePosition();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.handleResize.cancel();\n    }\n  }, {\n    key: 'updatePosition',\n    value: function updatePosition() {\n      var element = (0, _reactDom.findDOMNode)(this.transition);\n      if (element instanceof HTMLElement) {\n        element.style.visibility = 'inherit';\n        setTranslateValue(this.props, element);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          onEnter = _props.onEnter,\n          onEntering = _props.onEntering,\n          onExit = _props.onExit,\n          onExited = _props.onExited,\n          styleProp = _props.style,\n          theme = _props.theme,\n          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'onEnter', 'onEntering', 'onExit', 'onExited', 'style', 'theme']);\n\n      var style = (0, _extends3.default)({}, styleProp);\n\n      if (!this.props.in && this.state.firstMount) {\n        style.visibility = 'hidden';\n      }\n\n      return _react2.default.createElement(_reactEventListener2.default, { target: 'window', onResize: this.handleResize }, _react2.default.createElement(_Transition2.default, (0, _extends3.default)({\n        onEnter: this.handleEnter,\n        onEntering: this.handleEntering,\n        onExit: this.handleExit,\n        onExited: this.handleExited,\n        appear: true,\n        style: style\n      }, other, {\n        ref: function ref(node) {\n          _this2.transition = node;\n        }\n      }), children));\n    }\n  }]);\n  return Slide;\n}(_react2.default.Component);\n\nSlide.propTypes = \"production\" !== \"production\" ? {\n  /**\n   * A single child content element.\n   */\n  children: _propTypes2.default.element,\n  /**\n   * Direction the child node will enter from.\n   */\n  direction: _propTypes2.default.oneOf(['left', 'right', 'up', 'down']),\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: _propTypes2.default.bool,\n  /**\n   * @ignore\n   */\n  onEnter: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onEntered: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onEntering: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onExit: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onExited: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onExiting: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  style: _propTypes2.default.object,\n  /**\n   * @ignore\n   */\n  theme: _propTypes2.default.object.isRequired,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number })])\n} : {};\n\nSlide.defaultProps = {\n  timeout: {\n    enter: _transitions.duration.enteringScreen,\n    exit: _transitions.duration.leavingScreen\n  }\n};\n\nexports.default = (0, _withTheme2.default)()(Slide);"},"hash":"762144309352a8e929e2da93c198d8e6"}