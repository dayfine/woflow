{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":8,"column":24}},{"name":"babel-runtime/helpers/defineProperty","loc":{"line":12,"column":31}},{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":16,"column":40}},{"name":"react","loc":{"line":20,"column":21}},{"name":"prop-types","loc":{"line":24,"column":25}},{"name":"classnames","loc":{"line":28,"column":26}},{"name":"../styles/withStyles","loc":{"line":32,"column":26}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = undefined;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _withStyles = require('../styles/withStyles');\n\nvar _withStyles2 = _interopRequireDefault(_withStyles);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nvar styles = exports.styles = function styles(theme) {\n  return {\n    root: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      height: 48,\n      background: 'rgba(0, 0, 0, 0.4)',\n      display: 'flex',\n      alignItems: 'center',\n      fontFamily: theme.typography.fontFamily\n    },\n    rootBottom: {\n      bottom: 0\n    },\n    rootTop: {\n      top: 0\n    },\n    rootWithSubtitle: {\n      height: 68\n    },\n    titleWrap: {\n      flexGrow: 1,\n      marginLeft: theme.mixins.gutters({}).paddingLeft,\n      marginRight: theme.mixins.gutters({}).paddingRight,\n      color: 'white',\n      overflow: 'hidden'\n    },\n    titleWrapActionLeft: {\n      marginLeft: 0\n    },\n    titleWrapActionRight: {\n      marginRight: 0\n    },\n    title: {\n      fontSize: theme.typography.pxToRem(16),\n      lineHeight: '24px',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    subtitle: {\n      fontSize: theme.typography.pxToRem(12),\n      lineHeight: 1,\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    actionIconPositionLeft: {\n      order: -1\n    },\n    childImg: {\n      height: '100%',\n      transform: 'translateX(-50%)',\n      position: 'relative',\n      left: '50%'\n    }\n  };\n};\n\nfunction GridListTileBar(props) {\n  var _classNames, _classNames2;\n\n  var actionIcon = props.actionIcon,\n      actionPosition = props.actionPosition,\n      classes = props.classes,\n      classNameProp = props.className,\n      subtitle = props.subtitle,\n      title = props.title,\n      titlePosition = props.titlePosition,\n      other = (0, _objectWithoutProperties3.default)(props, ['actionIcon', 'actionPosition', 'classes', 'className', 'subtitle', 'title', 'titlePosition']);\n\n  var actionPos = actionIcon && actionPosition;\n  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.rootBottom, titlePosition === 'bottom'), (0, _defineProperty3.default)(_classNames, classes.rootTop, titlePosition === 'top'), (0, _defineProperty3.default)(_classNames, classes.rootWithSubtitle, subtitle), _classNames), classNameProp);\n\n  // Remove the margin between the title / subtitle wrapper, and the Action Icon\n  var titleWrapClassName = (0, _classnames2.default)(classes.titleWrap, (_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, classes.titleWrapActionLeft, actionPos === 'left'), (0, _defineProperty3.default)(_classNames2, classes.titleWrapActionRight, actionPos === 'right'), _classNames2));\n\n  return _react2.default.createElement('div', (0, _extends3.default)({ className: className }, other), _react2.default.createElement('div', { className: titleWrapClassName }, _react2.default.createElement('div', { className: classes.title }, title), subtitle ? _react2.default.createElement('div', { className: classes.subtitle }, subtitle) : null), actionIcon ? _react2.default.createElement('div', { className: (0, _classnames2.default)((0, _defineProperty3.default)({}, classes.actionIconPositionLeft, actionPos === 'left')) }, actionIcon) : null);\n}\n\nGridListTileBar.propTypes = \"production\" !== \"production\" ? {\n  /**\n   * An IconButton element to be used as secondary action target\n   * (primary action target is the tile itself).\n   */\n  actionIcon: _propTypes2.default.node,\n  /**\n   * Position of secondary action IconButton.\n   */\n  actionPosition: _propTypes2.default.oneOf(['left', 'right']),\n  /**\n   * Useful to extend the style applied to components.\n   */\n  classes: _propTypes2.default.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: _propTypes2.default.string,\n  /**\n   * String or element serving as subtitle (support text).\n   */\n  subtitle: _propTypes2.default.node,\n  /**\n   * Title to be displayed on tile.\n   */\n  title: _propTypes2.default.node,\n  /**\n   * Position of the title bar.\n   */\n  titlePosition: _propTypes2.default.oneOf(['top', 'bottom'])\n} : {};\n\nGridListTileBar.defaultProps = {\n  actionPosition: 'right',\n  titlePosition: 'bottom'\n};\n\nexports.default = (0, _withStyles2.default)(styles, { name: 'MuiGridListTileBar' })(GridListTileBar);"},"hash":"f511067acd87f6aa44fd165308d67b09"}