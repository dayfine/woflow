{"dependencies":[{"name":"babel-runtime/helpers/defineProperty","loc":{"line":8,"column":31}},{"name":"babel-runtime/core-js/object/keys","loc":{"line":12,"column":20}},{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":16,"column":40}},{"name":"babel-runtime/helpers/extends","loc":{"line":20,"column":24}},{"name":"babel-runtime/core-js/object/get-prototype-of","loc":{"line":24,"column":30}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":28,"column":31}},{"name":"babel-runtime/helpers/createClass","loc":{"line":32,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":36,"column":42}},{"name":"babel-runtime/helpers/inherits","loc":{"line":40,"column":25}},{"name":"react","loc":{"line":44,"column":21}},{"name":"prop-types","loc":{"line":48,"column":25}},{"name":"react-dom","loc":{"line":52,"column":24}},{"name":"classnames","loc":{"line":56,"column":26}},{"name":"warning","loc":{"line":60,"column":23}},{"name":"keycode","loc":{"line":64,"column":23}},{"name":"dom-helpers/util/inDOM","loc":{"line":68,"column":21}},{"name":"dom-helpers/query/contains","loc":{"line":72,"column":24}},{"name":"dom-helpers/activeElement","loc":{"line":76,"column":29}},{"name":"dom-helpers/ownerDocument","loc":{"line":80,"column":29}},{"name":"../utils/addEventListener","loc":{"line":84,"column":32}},{"name":"../utils/helpers","loc":{"line":88,"column":23}},{"name":"../transitions/Fade","loc":{"line":90,"column":20}},{"name":"../styles/withStyles","loc":{"line":94,"column":26}},{"name":"./modalManager","loc":{"line":98,"column":28}},{"name":"./Backdrop","loc":{"line":102,"column":24}},{"name":"../internal/Portal","loc":{"line":106,"column":22}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = undefined;\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _keycode = require('keycode');\n\nvar _keycode2 = _interopRequireDefault(_keycode);\n\nvar _inDOM = require('dom-helpers/util/inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nvar _contains = require('dom-helpers/query/contains');\n\nvar _contains2 = _interopRequireDefault(_contains);\n\nvar _activeElement = require('dom-helpers/activeElement');\n\nvar _activeElement2 = _interopRequireDefault(_activeElement);\n\nvar _ownerDocument = require('dom-helpers/ownerDocument');\n\nvar _ownerDocument2 = _interopRequireDefault(_ownerDocument);\n\nvar _addEventListener = require('../utils/addEventListener');\n\nvar _addEventListener2 = _interopRequireDefault(_addEventListener);\n\nvar _helpers = require('../utils/helpers');\n\nvar _Fade = require('../transitions/Fade');\n\nvar _Fade2 = _interopRequireDefault(_Fade);\n\nvar _withStyles = require('../styles/withStyles');\n\nvar _withStyles2 = _interopRequireDefault(_withStyles);\n\nvar _modalManager = require('./modalManager');\n\nvar _modalManager2 = _interopRequireDefault(_modalManager);\n\nvar _Backdrop = require('./Backdrop');\n\nvar _Backdrop2 = _interopRequireDefault(_Backdrop);\n\nvar _Portal = require('../internal/Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n// Modals don't open on the server so this won't break concurrency.\n// Could also put this on context.\nvar modalManager = (0, _modalManager2.default)();\n\nvar styles = exports.styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      width: '100%',\n      height: '100%',\n      position: 'fixed',\n      zIndex: theme.zIndex.dialog,\n      top: 0,\n      left: 0\n    },\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n\n/**\n * The modal component provides a solid foundation for creating dialogs,\n * popovers, or whatever else.\n * The component renders its `children` node in front of a backdrop component.\n *\n * The `Modal` offers a few helpful features over using just a `Portal` component and some styles:\n * - Manages dialog stacking when one-at-a-time just isn't enough.\n * - Creates a backdrop, for disabling interaction below the modal.\n * - It properly manages focus; moving to the modal content,\n *   and keeping it there until the modal is closed.\n * - It disables scrolling of the page content while open.\n * - Adds the appropriate ARIA roles are automatically.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = function (_React$Component) {\n  (0, _inherits3.default)(Modal, _React$Component);\n\n  function Modal() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Modal);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Modal.__proto__ || (0, _getPrototypeOf2.default)(Modal)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Modal, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      if (!this.props.show) {\n        this.setState({ exited: true });\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.mounted = true;\n      if (this.props.show) {\n        this.handleShow();\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.show && this.state.exited) {\n        this.setState({ exited: false });\n      }\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps) {\n      if (!this.props.show && nextProps.show) {\n        this.checkForFocus();\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (!prevProps.show && this.props.show) {\n        this.handleShow();\n      }\n      // We are waiting for the onExited callback to call handleHide.\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.show || !this.state.exited) {\n        this.handleHide();\n      }\n      this.mounted = false;\n    }\n  }, {\n    key: 'checkForFocus',\n    value: function checkForFocus() {\n      if (_inDOM2.default) {\n        this.lastFocus = (0, _activeElement2.default)();\n      }\n    }\n  }, {\n    key: 'restoreLastFocus',\n    value: function restoreLastFocus() {\n      if (this.lastFocus && this.lastFocus.focus) {\n        this.lastFocus.focus();\n        this.lastFocus = undefined;\n      }\n    }\n  }, {\n    key: 'handleShow',\n    value: function handleShow() {\n      var doc = (0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(this));\n      this.props.modalManager.add(this);\n      this.onDocumentKeyUpListener = (0, _addEventListener2.default)(doc, 'keyup', this.handleDocumentKeyUp);\n      this.onFocusListener = (0, _addEventListener2.default)(doc, 'focus', this.handleFocusListener, true);\n      this.focus();\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(this)));\n      var modalContent = this.modal && this.modal.lastChild;\n      var focusInModal = currentFocus && (0, _contains2.default)(modalContent, currentFocus);\n\n      if (modalContent instanceof HTMLElement && !focusInModal) {\n        if (!modalContent.hasAttribute('tabIndex')) {\n          modalContent.setAttribute('tabIndex', -1);\n          \"development\" !== \"production\" ? (0, _warning2.default)(false, 'Material-UI: the modal content node does not accept focus. ' + 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".') : void 0;\n        }\n\n        modalContent.focus();\n      }\n    }\n  }, {\n    key: 'handleHide',\n    value: function handleHide() {\n      this.props.modalManager.remove(this);\n      if (this.onDocumentKeyUpListener) this.onDocumentKeyUpListener.remove();\n      if (this.onFocusListener) this.onFocusListener.remove();\n      this.restoreLastFocus();\n    }\n  }, {\n    key: 'renderBackdrop',\n    value: function renderBackdrop() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _props = this.props,\n          BackdropClassName = _props.BackdropClassName,\n          BackdropComponent = _props.BackdropComponent,\n          BackdropInvisible = _props.BackdropInvisible,\n          BackdropTransitionDuration = _props.BackdropTransitionDuration,\n          show = _props.show;\n\n      return _react2.default.createElement(_Fade2.default, (0, _extends3.default)({ appear: true, 'in': show, timeout: BackdropTransitionDuration }, other), _react2.default.createElement(BackdropComponent, {\n        invisible: BackdropInvisible,\n        className: BackdropClassName,\n        onClick: this.handleBackdropClick\n      }));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props2 = this.props,\n          BackdropClassName = _props2.BackdropClassName,\n          BackdropComponent = _props2.BackdropComponent,\n          BackdropInvisible = _props2.BackdropInvisible,\n          BackdropTransitionDuration = _props2.BackdropTransitionDuration,\n          children = _props2.children,\n          classes = _props2.classes,\n          className = _props2.className,\n          disableBackdrop = _props2.disableBackdrop,\n          ignoreBackdropClick = _props2.ignoreBackdropClick,\n          ignoreEscapeKeyUp = _props2.ignoreEscapeKeyUp,\n          keepMounted = _props2.keepMounted,\n          modalManagerProp = _props2.modalManager,\n          onBackdropClick = _props2.onBackdropClick,\n          onClose = _props2.onClose,\n          onEnter = _props2.onEnter,\n          onEntered = _props2.onEntered,\n          onEntering = _props2.onEntering,\n          onEscapeKeyUp = _props2.onEscapeKeyUp,\n          onExit = _props2.onExit,\n          onExited = _props2.onExited,\n          onExiting = _props2.onExiting,\n          show = _props2.show,\n          other = (0, _objectWithoutProperties3.default)(_props2, ['BackdropClassName', 'BackdropComponent', 'BackdropInvisible', 'BackdropTransitionDuration', 'children', 'classes', 'className', 'disableBackdrop', 'ignoreBackdropClick', 'ignoreEscapeKeyUp', 'keepMounted', 'modalManager', 'onBackdropClick', 'onClose', 'onEnter', 'onEntered', 'onEntering', 'onEscapeKeyUp', 'onExit', 'onExited', 'onExiting', 'show']);\n\n      if (!keepMounted && !show && this.state.exited) {\n        return null;\n      }\n\n      var transitionCallbacks = {\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: this.handleTransitionExited\n      };\n\n      var modalChild = _react2.default.Children.only(children);\n      var _modalChild$props = modalChild.props,\n          role = _modalChild$props.role,\n          tabIndex = _modalChild$props.tabIndex;\n\n      var childProps = {};\n\n      if (role === undefined) {\n        childProps.role = role === undefined ? 'document' : role;\n      }\n\n      if (tabIndex === undefined) {\n        childProps.tabIndex = tabIndex == null ? -1 : tabIndex;\n      }\n\n      var backdropProps = void 0;\n\n      // It's a Transition like component\n      if (modalChild.props.hasOwnProperty('in')) {\n        (0, _keys2.default)(transitionCallbacks).forEach(function (key) {\n          childProps[key] = (0, _helpers.createChainedFunction)(transitionCallbacks[key], modalChild.props[key]);\n        });\n      } else {\n        backdropProps = transitionCallbacks;\n      }\n\n      if ((0, _keys2.default)(childProps).length) {\n        modalChild = _react2.default.cloneElement(modalChild, childProps);\n      }\n\n      return _react2.default.createElement(_Portal2.default, {\n        open: true,\n        ref: function ref(node) {\n          _this2.mountNode = node ? node.getLayer() : null;\n        }\n      }, _react2.default.createElement('div', (0, _extends3.default)({\n        className: (0, _classnames2.default)(classes.root, className, (0, _defineProperty3.default)({}, classes.hidden, this.state.exited))\n      }, other, {\n        ref: function ref(node) {\n          _this2.modal = node;\n        }\n      }), !disableBackdrop && (!keepMounted || show || !this.state.exited) && this.renderBackdrop(backdropProps), modalChild));\n    }\n  }]);\n  return Modal;\n}(_react2.default.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.state = {\n    exited: false\n  };\n  this.onDocumentKeyUpListener = null;\n  this.onFocusListener = null;\n  this.mounted = false;\n  this.lastFocus = undefined;\n  this.modal = null;\n  this.mountNode = null;\n\n  this.handleFocusListener = function () {\n    if (!_this3.mounted || !_this3.props.modalManager.isTopModal(_this3)) {\n      return;\n    }\n\n    var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(_this3)));\n    var modalContent = _this3.modal && _this3.modal.lastChild;\n\n    if (modalContent instanceof HTMLElement && modalContent !== currentFocus && !(0, _contains2.default)(modalContent, currentFocus)) {\n      modalContent.focus();\n    }\n  };\n\n  this.handleDocumentKeyUp = function (event) {\n    if (!_this3.mounted || !_this3.props.modalManager.isTopModal(_this3)) {\n      return;\n    }\n\n    if ((0, _keycode2.default)(event) !== 'esc') {\n      return;\n    }\n\n    var _props3 = _this3.props,\n        onEscapeKeyUp = _props3.onEscapeKeyUp,\n        onClose = _props3.onClose,\n        ignoreEscapeKeyUp = _props3.ignoreEscapeKeyUp;\n\n    if (onEscapeKeyUp) {\n      onEscapeKeyUp(event);\n    }\n\n    if (onClose && !ignoreEscapeKeyUp) {\n      onClose(event);\n    }\n  };\n\n  this.handleBackdropClick = function (event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    var _props4 = _this3.props,\n        onBackdropClick = _props4.onBackdropClick,\n        onClose = _props4.onClose,\n        ignoreBackdropClick = _props4.ignoreBackdropClick;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose && !ignoreBackdropClick) {\n      onClose(event);\n    }\n  };\n\n  this.handleTransitionExited = function () {\n    if (_this3.props.onExited) {\n      var _props5;\n\n      (_props5 = _this3.props).onExited.apply(_props5, arguments);\n    }\n\n    _this3.setState({ exited: true });\n    _this3.handleHide();\n  };\n};\n\nModal.propTypes = \"development\" !== \"production\" ? {\n  /**\n   * The CSS class name of the backdrop element.\n   */\n  BackdropClassName: _propTypes2.default.string,\n  /**\n   * Pass a component class to use as the backdrop.\n   */\n  BackdropComponent: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  /**\n   * If `true`, the backdrop is invisible.\n   */\n  BackdropInvisible: _propTypes2.default.bool,\n  /**\n   * The duration for the backdrop transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  BackdropTransitionDuration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number })]),\n  /**\n   * A single child content element.\n   */\n  children: _propTypes2.default.element,\n  /**\n   * Useful to extend the style applied to components.\n   */\n  classes: _propTypes2.default.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: _propTypes2.default.string,\n  /**\n   * If `true`, the backdrop is disabled.\n   */\n  disableBackdrop: _propTypes2.default.bool,\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  ignoreBackdropClick: _propTypes2.default.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  ignoreEscapeKeyUp: _propTypes2.default.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This property can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   */\n  keepMounted: _propTypes2.default.bool,\n  /**\n   * Instance of the modal manager.\n   */\n  modalManager: _propTypes2.default.object,\n  /**\n   * Callback fires when the backdrop is clicked on.\n   */\n  onBackdropClick: _propTypes2.default.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: _propTypes2.default.func,\n  /**\n   * Callback fired before the modal is entering.\n   */\n  onEnter: _propTypes2.default.func,\n  /**\n   * Callback fired when the modal has entered.\n   */\n  onEntered: _propTypes2.default.func,\n  /**\n   * Callback fired when the modal is entering.\n   */\n  onEntering: _propTypes2.default.func,\n  /**\n   * Callback fires when the escape key is pressed and the modal is in focus.\n   */\n  onEscapeKeyUp: _propTypes2.default.func,\n  /**\n   * Callback fired before the modal is exiting.\n   */\n  onExit: _propTypes2.default.func,\n  /**\n   * Callback fired when the modal has exited.\n   */\n  onExited: _propTypes2.default.func,\n  /**\n   * Callback fired when the modal is exiting.\n   */\n  onExiting: _propTypes2.default.func,\n  /**\n   * If `true`, the Modal is visible.\n   */\n  show: _propTypes2.default.bool\n} : {};\n\nModal.defaultProps = {\n  BackdropComponent: _Backdrop2.default,\n  BackdropInvisible: false,\n  BackdropTransitionDuration: 300,\n  disableBackdrop: false,\n  ignoreBackdropClick: false,\n  ignoreEscapeKeyUp: false,\n  keepMounted: false,\n  modalManager: modalManager\n};\n\nexports.default = (0, _withStyles2.default)(styles, { flip: false, name: 'MuiModal' })(Modal);"},"hash":"ae9cca0f3679e49983b4fc0bb68af75d"}