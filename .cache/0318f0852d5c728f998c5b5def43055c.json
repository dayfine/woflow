{"dependencies":[{"name":"react","loc":{"line":1,"column":18}},{"name":"react-redux","loc":{"line":2,"column":24}},{"name":"material-ui/styles","loc":{"line":4,"column":27}},{"name":"material-ui/Dialog","loc":{"line":5,"column":19}},{"name":"material-ui/Icon","loc":{"line":6,"column":17}},{"name":"material-ui/IconButton","loc":{"line":7,"column":23}},{"name":"material-ui/transitions/Slide","loc":{"line":8,"column":18}},{"name":"material-ui/Progress","loc":{"line":9,"column":33}},{"name":"../timeCard/views/CountDownToggle","loc":{"line":11,"column":28}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _styles = require(\"material-ui/styles\");\n\nvar _Dialog = require(\"material-ui/Dialog\");\n\nvar _Dialog2 = _interopRequireDefault(_Dialog);\n\nvar _Icon = require(\"material-ui/Icon\");\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _IconButton = require(\"material-ui/IconButton\");\n\nvar _IconButton2 = _interopRequireDefault(_IconButton);\n\nvar _Slide = require(\"material-ui/transitions/Slide\");\n\nvar _Slide2 = _interopRequireDefault(_Slide);\n\nvar _Progress = require(\"material-ui/Progress\");\n\nvar _CountDownToggle = require(\"../timeCard/views/CountDownToggle\");\n\nvar _CountDownToggle2 = _interopRequireDefault(_CountDownToggle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar styles = {\n  children: {\n    top: '100vh',\n    left: '100vw'\n  },\n  center: {\n    margin: 'auto',\n    position: 'absolute',\n    zIndex: 4999\n  },\n  centerTimer: {\n    margin: 'auto',\n    position: 'absolute',\n    zIndex: 5000\n  }\n\n};\n\nvar FullScreenDialog = function FullScreenDialog(props) {\n  var open = props.open,\n      onClose = props.onClose,\n      classes = props.classes;\n  var _props$timer = props.timer,\n      timePassed = _props$timer.timePassed,\n      totalSeconds = _props$timer.totalSeconds;\n\n  return _react2.default.createElement(\n    \"div\",\n    null,\n    _react2.default.createElement(\n      _Dialog2.default,\n      {\n        fullScreen: true,\n        open: open,\n        transition: _react2.default.createElement(_Slide2.default, { direction: \"up\" })\n      },\n      _react2.default.createElement(\n        _IconButton2.default,\n        { color: \"contrast\", onClick: onClose, \"aria-label\": \"Close\" },\n        _react2.default.createElement(\n          _Icon2.default,\n          null,\n          \"clear\"\n        )\n      ),\n      _react2.default.createElement(\n        \"div\",\n        { className: classes.center },\n        _react2.default.createElement(_Progress.CircularProgress, {\n          mode: \"determinate\",\n          max: totalSeconds,\n          min: 0,\n          value: totalSeconds - timePassed,\n          size: 750,\n          thickness: 4\n        })\n      ),\n      _react2.default.createElement(_CountDownToggle2.default, { className: classes.centerTimer })\n    )\n  );\n};\n\nvar StyledComponent = (0, _styles.withStyles)(styles)(FullScreenDialog);\n\nvar mapState = function mapState(state) {\n  return {\n    timer: state.timer,\n    colors: state.setting.colors\n  };\n};\n\nexports.default = (0, _reactRedux.connect)(mapState)(StyledComponent);"},"hash":"c98f420f273e223203a23c39156f5ad2"}