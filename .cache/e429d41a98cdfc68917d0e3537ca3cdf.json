{"dependencies":[{"name":"redux","loc":{"line":1,"column":62}},{"name":"redux-thunk","loc":{"line":2,"column":28}},{"name":"redux-logger","loc":{"line":5,"column":29}},{"name":"redux-devtools-extension","loc":{"line":6,"column":36}},{"name":"./timeCard","loc":{"line":8,"column":41}},{"name":"./dayFlow","loc":{"line":9,"column":40}},{"name":"./projectMgmt","loc":{"line":10,"column":40}},{"name":"./userSetting","loc":{"line":11,"column":40}},{"name":"./common/currentTaskReducer","loc":{"line":12,"column":31}},{"name":"./demo-seed","loc":{"line":14,"column":33}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _redux = require(\"redux\");\n\nvar _reduxThunk = require(\"redux-thunk\");\n\nvar _reduxThunk2 = _interopRequireDefault(_reduxThunk);\n\nvar _reduxLogger = require(\"redux-logger\");\n\nvar _reduxDevtoolsExtension = require(\"redux-devtools-extension\");\n\nvar _timeCard = require(\"./timeCard\");\n\nvar _dayFlow = require(\"./dayFlow\");\n\nvar _projectMgmt = require(\"./projectMgmt\");\n\nvar _userSetting = require(\"./userSetting\");\n\nvar _currentTaskReducer = require(\"./common/currentTaskReducer\");\n\nvar _currentTaskReducer2 = _interopRequireDefault(_currentTaskReducer);\n\nvar _demoSeed = require(\"./demo-seed\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/es/storage'\nvar rootReducer = (0, _redux.combineReducers)({\n  timer: _timeCard.reducer,\n  events: _dayFlow.reducer,\n  projects: _projectMgmt.reducer,\n  setting: _userSetting.reducer,\n  currentTaskId: _currentTaskReducer2.default\n});\n// persistConfig = { storage, key: 'root' },\n// reducer = persistReducer(persistConfig, rootReducer)\n\nvar initialState = {\n  timer: {\n    totalSeconds: 300,\n    timePassed: 0,\n    status: 'stopped'\n  },\n  projects: _demoSeed.projects,\n  events: _demoSeed.blocks,\n  currentTaskId: 1,\n  setting: {\n    daySpan: [10, 17],\n    numDays: 3,\n    colors: {\n      primary: '#03a9f4',\n      pDark: '#007ac1',\n      pLight: '#67daff',\n      secondary: '#1de9b6'\n    },\n    timeZone: '',\n    timeFormat: ''\n  }\n};\n\nvar middlewares = [_reduxThunk2.default, (0, _reduxLogger.createLogger)({\n  predicate: function predicate(getState, action) {\n    return action.type !== 'TIMER/UPDATE';\n  }\n})],\n    enhancers = (0, _reduxDevtoolsExtension.composeWithDevTools)(_redux.applyMiddleware.apply(undefined, middlewares));\n\n// export default function configureStore () {\n//   let store = createStore(reducer, initialState, enhancers)\n//   let persistor = persistStore(store)\n\n//   return { persistor, store }\n// }\n\nexports.default = (0, _redux.createStore)(rootReducer, initialState, enhancers);"},"hash":"d8e71c572ad4d0de792989de0fad1019"}