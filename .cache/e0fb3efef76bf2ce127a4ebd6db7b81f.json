{"dependencies":[{"name":"babel-runtime/core-js/json/stringify","loc":{"line":7,"column":25}},{"name":"babel-runtime/core-js/object/keys","loc":{"line":11,"column":20}},{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":15,"column":40}},{"name":"prop-types","loc":{"line":19,"column":25}},{"name":"warning","loc":{"line":23,"column":23}},{"name":"../styles/createBreakpoints","loc":{"line":27,"column":33}},{"name":"../utils/withWidth","loc":{"line":29,"column":25}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _createBreakpoints = require('../styles/createBreakpoints');\n\nvar _withWidth = require('../utils/withWidth');\n\nvar _withWidth2 = _interopRequireDefault(_withWidth);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * @ignore - internal component.\n */\nfunction HiddenJs(props) {\n  var children = props.children,\n      lgDown = props.lgDown,\n      lgUp = props.lgUp,\n      mdDown = props.mdDown,\n      mdUp = props.mdUp,\n      only = props.only,\n      smDown = props.smDown,\n      smUp = props.smUp,\n      width = props.width,\n      xlDown = props.xlDown,\n      xlUp = props.xlUp,\n      xsDown = props.xsDown,\n      xsUp = props.xsUp,\n      other = (0, _objectWithoutProperties3.default)(props, ['children', 'lgDown', 'lgUp', 'mdDown', 'mdUp', 'only', 'smDown', 'smUp', 'width', 'xlDown', 'xlUp', 'xsDown', 'xsUp']);\n\n  \"production\" !== \"production\" ? (0, _warning2.default)((0, _keys2.default)(other).length === 0, 'Material-UI: unsupported properties received ' + (0, _stringify2.default)(other) + ' by `<Hidden />`.') : void 0;\n\n  var visible = true;\n\n  // `only` check is faster to get out sooner if used.\n  if (only) {\n    if (Array.isArray(only)) {\n      for (var i = 0; i < only.length; i += 1) {\n        var breakpoint = only[i];\n        if (width === breakpoint) {\n          visible = false;\n          break;\n        }\n      }\n    } else if (only && width === only) {\n      visible = false;\n    }\n  }\n\n  // Allow `only` to be combined with other props. If already hidden, no need to check others.\n  if (visible) {\n    // determine visibility based on the smallest size up\n    for (var _i = 0; _i < _createBreakpoints.keys.length; _i += 1) {\n      var _breakpoint = _createBreakpoints.keys[_i];\n      var breakpointUp = props[_breakpoint + 'Up'];\n      var breakpointDown = props[_breakpoint + 'Down'];\n      if (breakpointUp && (0, _withWidth.isWidthUp)(_breakpoint, width) || breakpointDown && (0, _withWidth.isWidthDown)(_breakpoint, width)) {\n        visible = false;\n        break;\n      }\n    }\n  }\n\n  if (!visible) {\n    return null;\n  }\n\n  return children;\n}\n\nHiddenJs.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: _propTypes2.default.node,\n  /**\n   * @ignore\n   */\n  className: _propTypes2.default.string,\n  /**\n   * Specify which implementation to use.  'js' is the default, 'css' works better for server\n   * side rendering.\n   */\n  implementation: _propTypes2.default.oneOf(['js', 'css']),\n  /**\n   * You can use this property when choosing the `js` implementation with server side rendering.\n   *\n   * As `window.innerWidth` is unavailable on the server,\n   * we default to rendering an empty componenent during the first mount.\n   * In some situation you might want to use an heristic to approximate\n   * the screen width of the client browser screen width.\n   *\n   * For instance, you could be using the user-agent or the client-hints.\n   * http://caniuse.com/#search=client%20hint\n   */\n  initialWidth: _propTypes2.default.number,\n  /**\n   * If true, screens before this size and down will be hidden.\n   */\n  lgDown: _propTypes2.default.bool,\n  /**\n   * If true, screens this size and up will be hidden.\n   */\n  lgUp: _propTypes2.default.bool,\n  /**\n   * If true, screens before this size and down will be hidden.\n   */\n  mdDown: _propTypes2.default.bool,\n  /**\n   * If true, screens this size and up will be hidden.\n   */\n  mdUp: _propTypes2.default.bool,\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n  /**\n   * If true, screens before this size and down will be hidden.\n   */\n  smDown: _propTypes2.default.bool,\n  /**\n   * If true, screens this size and up will be hidden.\n   */\n  smUp: _propTypes2.default.bool,\n  /**\n   * @ignore\n   * width prop provided by withWidth decorator.\n   */\n  width: _propTypes2.default.string.isRequired,\n  /**\n   * If true, screens before this size and down will be hidden.\n   */\n  xlDown: _propTypes2.default.bool,\n  /**\n   * If true, screens this size and up will be hidden.\n   */\n  xlUp: _propTypes2.default.bool,\n  /**\n   * If true, screens before this size and down will be hidden.\n   */\n  xsDown: _propTypes2.default.bool,\n  /**\n   * If true, screens this size and up will be hidden.\n   */\n  xsUp: _propTypes2.default.bool\n};\n\nexports.default = (0, _withWidth2.default)()(HiddenJs);"},"hash":"d168fde26c858aa8c989ff16fe1a77d4"}