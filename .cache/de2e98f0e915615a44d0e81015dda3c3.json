{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":8,"column":24}},{"name":"babel-runtime/helpers/defineProperty","loc":{"line":12,"column":31}},{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":16,"column":40}},{"name":"react","loc":{"line":20,"column":21}},{"name":"prop-types","loc":{"line":24,"column":25}},{"name":"classnames","loc":{"line":28,"column":26}},{"name":"../styles/withStyles","loc":{"line":32,"column":26}},{"name":"../ButtonBase","loc":{"line":36,"column":26}},{"name":"../utils/helpers","loc":{"line":40,"column":23}},{"name":"../Icon","loc":{"line":42,"column":20}},{"name":"../utils/reactHelpers","loc":{"line":46,"column":28}},{"name":"../SvgIcon","loc":{"line":48,"column":8}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = undefined;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _withStyles = require('../styles/withStyles');\n\nvar _withStyles2 = _interopRequireDefault(_withStyles);\n\nvar _ButtonBase = require('../ButtonBase');\n\nvar _ButtonBase2 = _interopRequireDefault(_ButtonBase);\n\nvar _helpers = require('../utils/helpers');\n\nvar _Icon = require('../Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _reactHelpers = require('../utils/reactHelpers');\n\nrequire('../SvgIcon');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n// Ensure CSS specificity\n\nvar styles = exports.styles = function styles(theme) {\n  return {\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      width: theme.spacing.unit * 6,\n      height: theme.spacing.unit * 6,\n      padding: 0,\n      borderRadius: '50%',\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    colorAccent: {\n      color: theme.palette.secondary.A200\n    },\n    colorContrast: {\n      color: theme.palette.getContrastText(theme.palette.primary[500])\n    },\n    colorPrimary: {\n      color: theme.palette.primary[500]\n    },\n    colorInherit: {\n      color: 'inherit'\n    },\n    disabled: {\n      color: theme.palette.action.disabled\n    },\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n    icon: {\n      width: '1em',\n      height: '1em'\n    },\n    keyboardFocused: {\n      backgroundColor: theme.palette.text.divider\n    }\n  };\n};\n\n/**\n * Refer to the [Icons](/style/icons) section of the documentation\n * regarding the available icon options.\n */\n// @inheritedComponent ButtonBase\n\nfunction IconButton(props) {\n  var _classNames;\n\n  var buttonRef = props.buttonRef,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      disabled = props.disabled,\n      rootRef = props.rootRef,\n      other = (0, _objectWithoutProperties3.default)(props, ['buttonRef', 'children', 'classes', 'className', 'color', 'disabled', 'rootRef']);\n\n  return _react2.default.createElement(_ButtonBase2.default, (0, _extends3.default)({\n    className: (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'default'), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), _classNames), className),\n    centerRipple: true,\n    keyboardFocusedClassName: classes.keyboardFocused,\n    disabled: disabled,\n    rootRef: buttonRef,\n    ref: rootRef\n  }, other), _react2.default.createElement('span', { className: classes.label }, typeof children === 'string' ? _react2.default.createElement(_Icon2.default, { className: classes.icon }, children) : _react2.default.Children.map(children, function (child) {\n    if ((0, _reactHelpers.isMuiElement)(child, ['Icon', 'SvgIcon'])) {\n      return _react2.default.cloneElement(child, {\n        className: (0, _classnames2.default)(classes.icon, child.props.className)\n      });\n    }\n\n    return child;\n  })));\n}\n\nIconButton.propTypes = \"production\" !== \"production\" ? {\n  /**\n   * Use that property to pass a ref callback to the native button component.\n   */\n  buttonRef: _propTypes2.default.func,\n  /**\n   * The icon element.\n   * If a string is provided, it will be used as an icon font ligature.\n   */\n  children: _propTypes2.default.node,\n  /**\n   * Useful to extend the style applied to components.\n   */\n  classes: _propTypes2.default.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: _propTypes2.default.string,\n  /**\n   * The color of the component. It's using the theme palette when that makes sense.\n   */\n  color: _propTypes2.default.oneOf(['default', 'inherit', 'primary', 'contrast', 'accent']),\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: _propTypes2.default.bool,\n  /**\n   * If `true`, the ripple will be disabled.\n   */\n  disableRipple: _propTypes2.default.bool,\n  /**\n   * Use that property to pass a ref callback to the root component.\n   */\n  rootRef: _propTypes2.default.func\n} : {};\n\nIconButton.defaultProps = {\n  color: 'default',\n  disabled: false,\n  disableRipple: false\n};\n\nexports.default = (0, _withStyles2.default)(styles, { name: 'MuiIconButton' })(IconButton);"},"hash":"b05647c235e811df59193fdd592426d7"}